apiVersion: v1
kind: Service
metadata:
  name: defi-direct-mysql-{{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
  labels:
    app: defi-direct-mysql
    tier: mysql
    sourceBuildId: {{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
spec:
  ports:
  - port: 3306
  selector:
    app: defi-direct-mysql
    tier: mysql
    sourceBuildId: {{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
  type: NodePort
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: defi-direct-mysql-{{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
  labels:
    app: defi-direct-mysql
    tier: mysql
    sourceBuildId: {{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
spec:
  selector:
    matchLabels:
      app: defi-direct-mysql
      tier: mysql
      sourceBuildId: {{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
  strategy:
    type: Recreate
  progressDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app: defi-direct-mysql
        tier: api
        sourceBuildId: {{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
    spec:
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
          - name: single-request-reopen
      containers:
      - image: mysql:5.6
        name: defi-direct-mysql-{{BRANCH_NAME_LOWERCASE}}-{{BUILD_NUMBER}}
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: Defirocks2018!
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: defi-direct-mysql-persistent-storage
          mountPath: /var/lib/mysql
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: defi-direct-mysql-persistent-storage
        persistentVolumeClaim:
          claimName: defi-direct-mysql-pv-claim
